<?php
/**
 * @file
 * This file install the Valhalla profile.
 */


/**
 * Implements hook_install().
 *
 * Perform actions to set up the site for this profile.
 */
function valhalla_install() {
  include_once DRUPAL_ROOT . '/profiles/minimal/minimal.install';
  // Add text formats.
  $filtered_html_format = array(
    'format' => 'filtered_html',
    'name' => 'Filtered HTML',
    'weight' => 0,
    'filters' => array(
      // URL filter.
      'filter_url' => array(
        'weight' => 0,
        'status' => 1,
      ),
      // HTML filter.
      'filter_html' => array(
        'weight' => 1,
        'status' => 1,
      ),
      // Line break filter.
      'filter_autop' => array(
        'weight' => 2,
        'status' => 1,
      ),
      // HTML corrector filter.
      'filter_htmlcorrector' => array(
        'weight' => 10,
        'status' => 1,
      ),
    ),
  );
  $filtered_html_format = (object) $filtered_html_format;
  filter_format_save($filtered_html_format);

  $full_html_format = array(
    'format' => 'full_html',
    'name' => 'Full HTML',
    'weight' => 1,
    'filters' => array(
      // URL filter.
      'filter_url' => array(
        'weight' => 0,
        'status' => 1,
      ),
      // Line break filter.
      'filter_autop' => array(
        'weight' => 1,
        'status' => 1,
      ),
      // HTML corrector filter.
      'filter_htmlcorrector' => array(
        'weight' => 10,
        'status' => 1,
      ),
    ),
  );

  $full_html_format = (object) $full_html_format;
  filter_format_save($full_html_format);

  // Allow visitor account creation, but with administrative approval.
  // variable_set('user_register', USER_REGISTER_VISITORS_ADMINISTRATIVE_APPROVAL);

  // Disable user registration.
  variable_set('user_register', FALSE);

  // Enable default permissions for system roles.
  user_role_grant_permissions(DRUPAL_ANONYMOUS_RID, array('access content'));
  user_role_grant_permissions(DRUPAL_AUTHENTICATED_RID, array('access content'));

  theme_enable(array('Valhalla', 'AT Subtheme'));
  theme_disable(array('bartik', 'rubik'));

  // Set default home page
  variable_set('site_frontpage', 'status');

  // Set default theme to Valhalla
  variable_set('theme_default', 'Valhalla');
  // Set admin theme to Rubik.
  variable_set('admin_theme', 'seven');
  // Set admin theme on node/edit and node/add
  variable_set('node_admin_theme', '1');
  module_disable(array('update'));
  // Set default TZ.
  variable_set('date_default_timezone', "Europe/Berlin");
  variable_set('date_first_day', "1");
  variable_set('configurable_timezones', "0");

  // Programmatically enable ckeditor module, since enabling through dependencies doesn't work.
  module_enable(array('ckeditor'));

  // Create party terms
  $terms = array('A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'X', 'Z', 'Æ', 'Ø', 'Å');

  $taxonomy = taxonomy_vocabulary_machine_name_load('partier');
  $vid = $taxonomy->vid;
  foreach($terms as $term){
    $edit = new stdClass();
    $edit->name = $term;
    $edit->vid = $vid;
    
    taxonomy_term_save($edit);
  };

  // Create election types
  $terms = array('EU parlamentsvalg', 'Folketingsvalg', 'Kommunalvalg', 'Regionsvalg');

  $taxonomy = taxonomy_vocabulary_machine_name_load('valgtype');
  $vid = $taxonomy->vid;
  foreach($terms as $term){
    $edit= new stdClass();
    $edit->name = $term;
    $edit->vid = $vid;
    taxonomy_term_save($edit);
  };

  // Create meeting time
  $terms = array('8:00');

  $taxonomy = taxonomy_vocabulary_machine_name_load('volonteers_meeting_time');
  $vid = $taxonomy->vid;
  foreach($terms as $term){
    $edit = new stdClass();
    $edit->name = $term;
    $edit->vid = $vid;
    taxonomy_term_save($edit);
  };
}

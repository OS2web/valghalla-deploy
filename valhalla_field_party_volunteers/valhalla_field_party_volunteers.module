<?php
// valhalla_field_party_volunteers


function valhalla_field_party_volunteers_field_info() {
  return array(
    'party_volunteers_field' => array(
      'label' => t('(dead) Number of volunteers pr party'),
      'description' => t('Combines the party to the number of required volunteers for a specific polling station.'),
      'default_widget' => 'party_volunteers_standard',
      'default_formatter' => 'party_volunteers_default',
    ),
  );
}


function valhalla_field_party_volunteers_field_schema() {
  $columns = array(
    'party' => array(
      'description' => 'Party reference.',
      'type' => 'int',
      'unsigned' => TRUE,
      'not null' => TRUE,
      'default' => 0,
    ),
    'number' => array(
      'description' => 'Number of volunteers.',
      'type' => 'int',
      'unsigned' => TRUE,
      'not null' => TRUE,
      'default' => 0,
      ),
  );

  return array(
    'columns' => $columns,
    // TODO Add indexes.
  );
}


function valhalla_field_party_volunteers_field_widget_info() {
  $widgets = array();

  $widgets['party_volunteers_standard'] = array(
    'label' => t('Volunteers to Party'),
    'field types' => array('party_volunteers_field'),
    'settings' => array(
      'available_parties' => array(),
    )
  );

  return $widgets;
}


function valhalla_field_party_volunteers_field_widget_form(&$form, &$form_state, $field, $instance, $langcode, $items, $delta, $element) {
  $settings = $instance['widget']['settings'];

  $party_value = isset($items[$delta]['party']) ? $items[$delta]['party'] : '';
  $number_value = isset($items[$delta]['number']) ? $items[$delta]['number'] : '';

  if ($instance['widget']['type'] == 'party_volunteers_standard') {

    $options = array(0 => t('Select Party'));
    foreach (taxonomy_get_tree(2) as $item) {
      $options[$item->tid] = $item->name;
    }

    $element['party'] = array(
      '#type' => 'select',
      '#title' => t('Party'),
      '#options' => $options,
      '#default_value' => $party_value,
    );

    $element['number'] = array(
      '#type' => 'textfield',
      '#title' => t('Number'),
      '#size' => 5,
      '#default_value' => $number_value,
    );
  }
  
  return $element;
}


function valhalla_field_party_volunteers_field_formatter_info() {
  return array(
    'party_volunteers_default' => array(
      'label' => t('Default'),
      'field types' => array('party_volunteers_field'),
    ),
  );
}


function valhalla_field_party_volunteers_field_formatter_view($entity_type, $entity, $field, $instance, $langcode, $items, $display) {
  $element = array();

  switch ($display['type']) {
    case 'party_volunteers_default':
      foreach ($items as $delta => $item) {
        $term = taxonomy_term_load($item['party']);
        $element[$delta]['#markup'] = '<p>' . $term->name  . ': ' . $item['number'] . '</p>';
      }
      break;
  }

  return $element;
}


function valhalla_field_party_volunteers_field_is_empty($item, $field) {
  return empty($item['party']);
}
